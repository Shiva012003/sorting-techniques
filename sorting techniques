#include<bits/stdc++.h>
using namespace std;
void insert(int a[],int n)
{
 int i,j,x;
 for(i=1;i<n;i++)
 {
    j=i-1;
    x=a[i];
    while(j>-1&&a[j]>x)
    {
        a[j+1]=a[j];
        j--;
    }
    a[j+1]=x;                                                               //INSERTION SORT//
 }
}
int main()
{
    int n=10;
    int a[]={1,2,10,3,84,32,65,10,55,15};
    insert(a,n);
    for(int i=0;i<n;i++)
    {
        cout<<a[i]<<endl;
    }
}


             //QUICK SORT//


#include<bits/stdc++.h>
using namespace std;
int swap(int *x,int *y)
{
    int tem=*x;
    *x=*y;
    *y=tem;
}
int partition(int a[],int l,int h)
{
    int i,j;
    int pivot=a[l];
    i=l;
    j=h;
    while(i<j)
    {
        do
        {
            i++;
        } while (a[i]<=pivot);
        do{
            j--;
        }while(a[i]>pivot);
        if(i<j)
        {
            swap(&a[i],&a[j]);
        }
    }
    swap(&a[l],&a[j]);      
    
}
void quicksort(int a[],int l,int h)
{
    int j;
    if(l<h)
    {
        j=partition(a,l,h);
        quicksort(a,l,j);
        quicksort(a,j+1,h);
    }
}
int main()
{
    int a[]={10,16,8,12,15,6,3,9,5},n=10;
    quicksort(a,0,n);
    for(int i=0;i<n;i++)
    {
        cout<<a[i]<<endl;
    }

}





  //BUBBBLE SORT//

#include<bits/stdc++.h>
using namespace std;
int swap(int *x,int *y)
{
    int tem=*x;
    *x=*y;
    *y=tem;
}
int buble(int a[],int n)
{
    int i,j;
    for(i=0;i<n-1;i++)
    {
        for(j=0;j<n-i-1;j++)
        {
            if(a[j]>a[j+1])
            {
                swap(&a[j],&a[j+1]);
            }
        }
    }
}
int main()
{
    int a[]={10,5,12,15,6,3,8,45,14,2},n=10;
    buble(a,10);
    for(int i=0;i<10;i++)
    {
        cout<<a[i]<<endl;
    }
}


          //SELECTION SORT//

#include<bits/stdc++.h>
using namespace std;
int swap(int *x,int *y)
{
    int tem=*x;
    *x=*y;
    *y=tem;
}
int selection(int a[],int n)
{
    int i,k;
    for(i=0;i<n-1;i++)
    {
        for(int j=k=i;j<n;j++)
        {
            if(a[j]<a[k])
            {
                k=j;
            }
        }
        swap(&a[i],&a[k]);
    }
}
int main()
{
   int a[]={12,10,45,32,1,7,5},n=10,i;
   selection(a,10);
   for(i=0;i<n;i++)
   {
    cout<<a[i]<<endl;
   }
}
     
     
     //MERGE SORT//




#include<bits/stdc++.h>
using namespace std;
void merge(int a[],int l,int mid,int h)
{
  int i,j,k;
  i=k=l;
  j=mid+1;
  int b[1000];
  while(i<=mid&&j<=h)
  {
    if(a[i]<a[j])
    {
      b[k++]=a[i++];
    }
    else
    {
      b[k++]=a[j++];
    }
  }
  for(;i<=mid;i++)
  {
    b[k++]=a[i];
  }
  for(;j<=h;j++)
  {
    b[k++]=a[j];
  }
  for(i=l;i<=h;i++)
  {
    a[i]=b[i];
  }

}
void merge2(int a[],int n)
{
  int i,j,p,h,l,mid;
  for(p=2;p<=n;p=p*2)
  {
    for(i=0;i+p-1<n;i=i+p)
    {
      l=i;
      h=i+p-1;
      mid=(l+h)/2;
      merge(a,l,mid,h);
    }
  }
  if(n-i>p/2)
  {
    l=i;
    h=i+p-1;
    mid=(l+h)/2;
    merge(a,l,mid,n-1);
  }
  if(p/2<n)
  {
    merge(a,0,p/2-1,n-1);
  }
}
int main()
{
  int a[]={11,5,14,2,6,3,1,56,45},n=9;
  merge2(a,n);
  for(int i=0;i<n;i++)
  {
    cout<<a[i]<<endl;
  }
}
  
